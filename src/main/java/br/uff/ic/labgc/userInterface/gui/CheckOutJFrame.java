/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.uff.ic.labgc.userInterface.gui;

import br.uff.ic.labgc.client.Client;
import br.uff.ic.labgc.client.IClient;
import br.uff.ic.labgc.core.EVCSConstants;
import br.uff.ic.labgc.core.IObserver;
import br.uff.ic.labgc.exception.ApplicationException;
import br.uff.ic.labgc.exception.ClientException;
import java.awt.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import sun.font.Font2D;

/**
 *
 * @author Leonardo
 */
public class CheckOutJFrame extends javax.swing.JFrame
{

    /**
     * Creates new form CheckOutJFrame
     */
    public CheckOutJFrame() 
    {
        initComponents();
        //this.removeAll();
        this.repaint();
        
        MakeUnBold(WorkspacejLabel);
        MakeUnBold(RepositoryjLabel);
        MakeUnBold(RevisionNumberjLabel);
        MakeBold(RepositoryjLabel);
        
        CheckOutOutput = new CheckOutOutputJFrame();
        CheckOutOutput.setVisible(false);
        
        initTooltips();
        FinishjButton.setEnabled(false);
        NextjButton.setEnabled(true);
        BackjButton.setEnabled(false);
        
        RepoLocationPanel = new RepositoryLocationJPanel();
        RepoLocationPanel.setLocation(0,0);
        RepoLocationPanel.setSize(450,216);
        
        RevisionNumberPanel = new RevisionNumberJPanel();
        RevisionNumberPanel.setLocation(0,0);
        RevisionNumberPanel.setSize(450,216);
        
        
        WorkspaceLocationPanel = new WorkspaceLocationJPanel();
        WorkspaceLocationPanel.setLocation(0,0);
        WorkspaceLocationPanel.setSize(450,216);
       
          
        CheckOutChangejPanel.add(RepoLocationPanel);
        CheckOutChangejPanel.add(WorkspaceLocationPanel);
        CheckOutChangejPanel.add(RevisionNumberPanel);
        

        
        WorkspaceLocationPanel.setVisible(false);   
        WorkspaceLocationPanel.invalidate();
        WorkspaceLocationPanel.validate();
        
        RevisionNumberPanel.setVisible(false);   
        RevisionNumberPanel.invalidate();
        RevisionNumberPanel.validate();
        
        RepoLocationPanel.setVisible(true);   
        RepoLocationPanel.invalidate();
        RepoLocationPanel.validate();
        
       
        
        
         this.pack();
        /*MainjPanel.add(WorkspaceLocationPanel);
        MainjPanel.getComponent(1).setVisible(false);
        MainjPanel.getComponent(0).setVisible(true);
        MainjPanel.validate();*/
         
        Image im = null;
        im = Toolkit.getDefaultToolkit().createImage("Images//Logo.jpg");
        this.setIconImage(im);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        StepsjPanel = new javax.swing.JPanel();
        RepositoryjLabel = new javax.swing.JLabel();
        WorkspacejLabel = new javax.swing.JLabel();
        RevisionNumberjLabel = new javax.swing.JLabel();
        BackjButton = new javax.swing.JButton();
        NextjButton = new javax.swing.JButton();
        CanceljButton = new javax.swing.JButton();
        FinishjButton = new javax.swing.JButton();
        CheckOutChangejPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CheckOut");
        setType(java.awt.Window.Type.POPUP);

        StepsjPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        RepositoryjLabel.setText("Repository");

        WorkspacejLabel.setText("Workspace location");

        RevisionNumberjLabel.setText("Revision number");

        javax.swing.GroupLayout StepsjPanelLayout = new javax.swing.GroupLayout(StepsjPanel);
        StepsjPanel.setLayout(StepsjPanelLayout);
        StepsjPanelLayout.setHorizontalGroup(
            StepsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StepsjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StepsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(WorkspacejLabel)
                    .addComponent(RepositoryjLabel)
                    .addComponent(RevisionNumberjLabel))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        StepsjPanelLayout.setVerticalGroup(
            StepsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StepsjPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(RepositoryjLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(WorkspacejLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RevisionNumberjLabel)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        BackjButton.setText("Back");
        BackjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackjButtonActionPerformed(evt);
            }
        });

        NextjButton.setText("Next");
        NextjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextjButtonActionPerformed(evt);
            }
        });

        CanceljButton.setText("Cancel");
        CanceljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanceljButtonActionPerformed(evt);
            }
        });

        FinishjButton.setText("Finish");
        FinishjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinishjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CheckOutChangejPanelLayout = new javax.swing.GroupLayout(CheckOutChangejPanel);
        CheckOutChangejPanel.setLayout(CheckOutChangejPanelLayout);
        CheckOutChangejPanelLayout.setHorizontalGroup(
            CheckOutChangejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 449, Short.MAX_VALUE)
        );
        CheckOutChangejPanelLayout.setVerticalGroup(
            CheckOutChangejPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StepsjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(BackjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NextjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FinishjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, Short.MAX_VALUE)
                        .addComponent(CanceljButton))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CheckOutChangejPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StepsjPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CheckOutChangejPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackjButton)
                    .addComponent(NextjButton)
                    .addComponent(CanceljButton)
                    .addComponent(FinishjButton))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CanceljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanceljButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_CanceljButtonActionPerformed

    private void NextjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextjButtonActionPerformed
        // TODO add your handling code here:
        if(verifyRepository())
        {
           BackjButton.setEnabled(true);
           if(WorkspaceLocationPanel.isVisible())
           {
               if(!(WorkspaceLocationPanel.GetWorkspaceLocation().isEmpty()))
               {
                 NextjButton.setEnabled(false);
                 FinishjButton.setEnabled(true);
                 
                 RepoLocationPanel.setVisible(false);
                 WorkspaceLocationPanel.setVisible(false);
                 
                 RevisionNumberPanel.setVisible(true);
                 
                 MakeUnBold(WorkspacejLabel);
                 MakeUnBold(RepositoryjLabel);
                 MakeUnBold(RevisionNumberjLabel);
                 
                 MakeBold(RevisionNumberjLabel);
                 RevisionNumberPanel.invalidate();
                 RevisionNumberPanel.validate();
                 
                 
               }
               else
               {
                   JOptionPane.showMessageDialog(null,"Fill the workspace location!");
               }
           }
           else
           {
                RepoLocationPanel.setVisible(false);
                RevisionNumberPanel.setVisible(false);
                WorkspaceLocationPanel.setVisible(true);
                
                MakeUnBold(RepositoryjLabel);
                MakeUnBold(WorkspacejLabel);
                MakeUnBold(RevisionNumberjLabel);
                
                MakeBold(WorkspacejLabel);
                WorkspaceLocationPanel.invalidate();
                WorkspaceLocationPanel.validate();
           }
            this.pack();
        }
        else
        {  
            JOptionPane.showMessageDialog(null,"Fill the repository!");
        }
        
    }//GEN-LAST:event_NextjButtonActionPerformed

    private void BackjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackjButtonActionPerformed
        // TODO add your handling code here:
        
         FinishjButton.setEnabled(false);
         NextjButton.setEnabled(true);
         BackjButton.setEnabled(false);
         
         if(RevisionNumberPanel.isVisible())
         {
             BackjButton.setEnabled(true);
             RepoLocationPanel.setVisible(false);
             RevisionNumberPanel.setVisible(false);
             WorkspaceLocationPanel.setVisible(true);
            
             MakeUnBold(RepositoryjLabel);
             MakeUnBold(RevisionNumberjLabel);
             MakeUnBold(WorkspacejLabel);
             
             MakeBold(WorkspacejLabel);
             WorkspaceLocationPanel.invalidate();
             WorkspaceLocationPanel.validate();
         }
         else
         {
            BackjButton.setEnabled(false);

            WorkspaceLocationPanel.setVisible(false);
            RevisionNumberPanel.setVisible(false);
            RepoLocationPanel.setVisible(true);
            
            MakeUnBold(WorkspacejLabel);
            MakeUnBold(RevisionNumberjLabel);
            MakeUnBold(RepositoryjLabel);
            
            MakeBold(RepositoryjLabel);
            RepoLocationPanel.invalidate();
            RepoLocationPanel.validate();
         }
         this.pack();
    }//GEN-LAST:event_BackjButtonActionPerformed

    private void FinishjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinishjButtonActionPerformed
        // TODO add your handling code here:
       Cursor cursor = Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR );  
       this.setCursor( cursor );
       
       String  strWorkspace = WorkspaceLocationPanel.GetWorkspaceLocation();
       String strRepository  = RepoLocationPanel.GetRepo();
       String strRevision = RevisionNumberPanel.GetRevision();
       
       if(strWorkspace.isEmpty())
       {
           JOptionPane.showMessageDialog(null,"Fill the workspace location!");
           return;
       }
       
       String [] strArrayRepo = strRepository.split("/");
       strRepository ="";
       if(strArrayRepo.length >1)
       {
            for(int i=1;i<strArrayRepo.length;i++)
            {
                strRepository+=strArrayRepo[i];   
            }
       }
       
       String strHost = strArrayRepo[0];
       //strWorkspace+="\\";
       
       //JOptionPane.showMessageDialog(null,strHost+" -- "+strRepository+" -- "+strWorkspace);
       m_IClient = new Client(strHost, strRepository, strWorkspace) ;
       
        try 
        {
            if(!(m_IClient.isLogged()))
            { 
               LoginJFrame loginFrame = new LoginJFrame(m_IClient);
               loginFrame.setModal(true);
               loginFrame.setVisible(true);
            }
        } 
        catch (ApplicationException ex) 
        {
            cursor = Cursor.getDefaultCursor();  
            this.setCursor( cursor );
            JOptionPane.showMessageDialog(null,ex.getMessage() );  
        }
        
        
        try 
        {
            if(!(m_IClient.isLogged()))
            {
                
                JOptionPane.showMessageDialog(null,"To perform a checkout is necessary to login." );  
                return;
            }
        } 
        catch (ApplicationException ex) 
        {
           JOptionPane.showMessageDialog(null,ex.getMessage() );
           return;
        }
        
        try 
        {
            registerObserver();
            if(strRevision.isEmpty())
                strRevision= EVCSConstants.REVISION_HEAD;
            
            m_IClient.checkout(strRevision);
            //CheckOutOutput.setModal(true);
            CheckOutOutput.setVisible(true);
        } 
        catch (ApplicationException ex) 
        {
            cursor = Cursor.getDefaultCursor();  
            this.setCursor( cursor );
            JOptionPane.showMessageDialog(null,ex.getMessage() );
            CheckOutOutput.EnableOK();
           
        }
        CheckOutOutput.EnableOK();
        
        cursor = Cursor.getDefaultCursor();  
        this.setCursor( cursor ); 
        CheckOutOutput.SetText("Checkout done. \n", false);
        this.setVisible(false);
       
    }//GEN-LAST:event_FinishjButtonActionPerformed
    
     private void registerObserver() 
     {
        IObserver clientObs = new IObserver() {
            public void sendNotify(String msg) 
            {
                CheckOutOutput.SetText(msg + "\n", false);
            }
        };

        m_IClient.registerInterest(clientObs);
    }
   
    
    private boolean verifyRepository()
    {
        
        if(RepoLocationPanel.hasRepo())
        {
            return true;
           
        }
        
        return false;
    }
    private void initTooltips()
    {  
        String strRepositoryToolTip = "Fill the repository that you want to perform a checkout";
        RepositoryjLabel.setToolTipText(strRepositoryToolTip);  
        
        String strWorkspaceToolTip = "Indicate the location of your workspace";
        WorkspacejLabel.setToolTipText(strWorkspaceToolTip);
    }
    
    private void MakeUnBold(JLabel label)
    {
         Font f = label.getFont();
         f = new Font (label.getFont().getName(),Font.PLAIN,label.getFont().getSize());
         label.setFont(f);
	 //label.setFont(f.deriveFont(f.getStyle() ^ Font.BOLD));
         label.invalidate();
         label.validate();
         StepsjPanel.invalidate();
    }
    
    private void MakeBold(JLabel label)
    {
         Font f = label.getFont();
         f = new Font (label.getFont().getName(),Font.BOLD,label.getFont().getSize());
         label.setFont(f);
         //label.setFont(f.deriveFont(f.getStyle() | Font.BOLD));
         label.invalidate();
         label.validate();
         StepsjPanel.invalidate();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOutJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOutJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOutJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOutJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CheckOutJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackjButton;
    private javax.swing.JButton CanceljButton;
    private javax.swing.JPanel CheckOutChangejPanel;
    private javax.swing.JButton FinishjButton;
    private javax.swing.JButton NextjButton;
    private javax.swing.JLabel RepositoryjLabel;
    private javax.swing.JLabel RevisionNumberjLabel;
    private javax.swing.JPanel StepsjPanel;
    private javax.swing.JLabel WorkspacejLabel;
    // End of variables declaration//GEN-END:variables
    private RepositoryLocationJPanel RepoLocationPanel;
    private WorkspaceLocationJPanel WorkspaceLocationPanel;
    private RevisionNumberJPanel    RevisionNumberPanel;
    private IClient m_IClient;
    private CheckOutOutputJFrame CheckOutOutput;

    public void sendNotify(String path) 
    {
        //throw new UnsupportedOperationException("Not supported yet.");
        CheckOutOutput.SetText(path, false);
    }
}
